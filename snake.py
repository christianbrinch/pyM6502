import pygame
import threading
import numpy as np
import time
import mos6502
from importlib import reload

reload(mos6502)

pygame.init()
SIZE = height, width = (320, 320)
BLOCK_SIZE = 10
ARRAY_SIZE = 32
SCALE = SIZE[0] // ARRAY_SIZE


def run_mos6502(cpu):
    while cpu.flag_b:
        cpu.exec(1)
        time.sleep(.001)


def main():
    clock = pygame.time.Clock()
    screen = pygame.display.set_mode(SIZE)

    mem = mos6502.Memory()
    mem.load([0x20, 0x06, 0x06, 0x20, 0x38, 0x06, 0x20, 0x0d, 0x06, 0x20, 0x2a, 0x06, 0x60, 0xa9, 0x02, 0x85,
              0x02, 0xa9, 0x04, 0x85, 0x03, 0xa9, 0x11, 0x85, 0x10, 0xa9, 0x10, 0x85, 0x12, 0xa9, 0x0f, 0x85,
              0x14, 0xa9, 0x04, 0x85, 0x11, 0x85, 0x13, 0x85, 0x15, 0x60, 0xa5, 0xfe, 0x85, 0x00, 0xa5, 0xfe,
              0x29, 0x03, 0x18, 0x69, 0x02, 0x85, 0x01, 0x60, 0x20, 0x4d, 0x06, 0x20, 0x8d, 0x06, 0x20, 0xc3,
              0x06, 0x20, 0x19, 0x07, 0x20, 0x20, 0x07, 0x20, 0x2d, 0x07, 0x4c, 0x38, 0x06, 0xa5, 0xff, 0xc9,
              0x77, 0xf0, 0x0d, 0xc9, 0x64, 0xf0, 0x14, 0xc9, 0x73, 0xf0, 0x1b, 0xc9, 0x61, 0xf0, 0x22, 0x60,
              0xa9, 0x04, 0x24, 0x02, 0xd0, 0x26, 0xa9, 0x01, 0x85, 0x02, 0x60, 0xa9, 0x08, 0x24, 0x02, 0xd0,
              0x1b, 0xa9, 0x02, 0x85, 0x02, 0x60, 0xa9, 0x01, 0x24, 0x02, 0xd0, 0x10, 0xa9, 0x04, 0x85, 0x02,
              0x60, 0xa9, 0x02, 0x24, 0x02, 0xd0, 0x05, 0xa9, 0x08, 0x85, 0x02, 0x60, 0x60, 0x20, 0x94, 0x06,
              0x20, 0xa8, 0x06, 0x60, 0xa5, 0x00, 0xc5, 0x10, 0xd0, 0x0d, 0xa5, 0x01, 0xc5, 0x11, 0xd0, 0x07,
              0xe6, 0x03, 0xe6, 0x03, 0x20, 0x2a, 0x06, 0x60, 0xa2, 0x02, 0xb5, 0x10, 0xc5, 0x10, 0xd0, 0x06,
              0xb5, 0x11, 0xc5, 0x11, 0xf0, 0x09, 0xe8, 0xe8, 0xe4, 0x03, 0xf0, 0x06, 0x4c, 0xaa, 0x06, 0x4c,
              0x35, 0x07, 0x60, 0xa6, 0x03, 0xca, 0x8a, 0xb5, 0x10, 0x95, 0x12, 0xca, 0x10, 0xf9, 0xa5, 0x02,
              0x4a, 0xb0, 0x09, 0x4a, 0xb0, 0x19, 0x4a, 0xb0, 0x1f, 0x4a, 0xb0, 0x2f, 0xa5, 0x10, 0x38, 0xe9,
              0x20, 0x85, 0x10, 0x90, 0x01, 0x60, 0xc6, 0x11, 0xa9, 0x01, 0xc5, 0x11, 0xf0, 0x28, 0x60, 0xe6,
              0x10, 0xa9, 0x1f, 0x24, 0x10, 0xf0, 0x1f, 0x60, 0xa5, 0x10, 0x18, 0x69, 0x20, 0x85, 0x10, 0xb0,
              0x01, 0x60, 0xe6, 0x11, 0xa9, 0x06, 0xc5, 0x11, 0xf0, 0x0c, 0x60, 0xc6, 0x10, 0xa5, 0x10, 0x29,
              0x1f, 0xc9, 0x1f, 0xf0, 0x01, 0x60, 0x4c, 0x35, 0x07, 0xa0, 0x00, 0xa5, 0xfe, 0x91, 0x00, 0x60,
              0xa6, 0x03, 0xa9, 0x00, 0x81, 0x10, 0xa2, 0x00, 0xa9, 0x01, 0x81, 0x10, 0x60, 0xa2, 0x25, 0xea,
              0xea, 0xca, 0xd0, 0xfb, 0x60], 0x0600)

    cpu = mos6502.Processor(mem)
    cpu.reset()
    cpu.program_counter = 0x0600
    cpu.stack_pointer = 0xff

    parallel_thread = threading.Thread(target=run_mos6502, args=(cpu,))
    # Daemonize the thread to automatically exit when the main program exits
    # parallel_thread.daemon = True
    parallel_thread.start()

    running = True
    while running:

        # Random number generator
        cpu.memory[0x00fe] = np.random.randint(255)

        # Draw screen
        screen.fill((0, 0, 0))
        vmem = np.array([cpu.memory[0x0200+i]
                        for i in range(1024)]).reshape((32, 32))

        for y in range(ARRAY_SIZE):
            for x in range(ARRAY_SIZE):
                screen_x = x*SCALE
                screen_y = y*SCALE
                gray = vmem[y, x]
                if gray == 1:
                    gray = 255
                color = (gray, gray, gray)
                pygame.draw.rect(
                    screen, color, (screen_x, screen_y, BLOCK_SIZE, BLOCK_SIZE))
        pygame.display.flip()

        # Get player input
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                cpu.flag_b = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    cpu.memory[0x00ff] = 0x61
                elif event.key == pygame.K_RIGHT:
                    cpu.memory[0x00ff] = 0x64
                elif event.key == pygame.K_UP:
                    cpu.memory[0x00ff] = 0x77
                elif event.key == pygame.K_DOWN:
                    cpu.memory[0x00ff] = 0x73

        # Update and wait for next clock cycle
        pygame.display.update()
        clock.tick(60)


pygame.quit()
