import pygame
import numpy as np
import mos6502
from importlib import reload

reload(mos6502)

SIZE = height, width = 320, 320


def main():

    screen = pygame.display.set_mode(SIZE)
    clock = pygame.time.Clock()

    mem = mos6502.Memory()
    mem = mos6502.load(mem, 0x0600, [0x20, 0x06, 0x06, 0x20, 0x38, 0x06, 0x20, 0x0d, 0x06, 0x20, 0x2a, 0x06, 0x60, 0xa9, 0x02, 0x85,
                                     0x02, 0xa9, 0x04, 0x85, 0x03, 0xa9, 0x11, 0x85, 0x10, 0xa9, 0x10, 0x85, 0x12, 0xa9, 0x0f, 0x85,
                                     0x14, 0xa9, 0x04, 0x85, 0x11, 0x85, 0x13, 0x85, 0x15, 0x60, 0xa5, 0xfe, 0x85, 0x00, 0xa5, 0xfe,
                                     0x29, 0x03, 0x18, 0x69, 0x02, 0x85, 0x01, 0x60, 0x20, 0x4d, 0x06, 0x20, 0x8d, 0x06, 0x20, 0xc3,
                                     0x06, 0x20, 0x19, 0x07, 0x20, 0x20, 0x07, 0x20, 0x2d, 0x07, 0x4c, 0x38, 0x06, 0xa5, 0xff, 0xc9,
                                     0x77, 0xf0, 0x0d, 0xc9, 0x64, 0xf0, 0x14, 0xc9, 0x73, 0xf0, 0x1b, 0xc9, 0x61, 0xf0, 0x22, 0x60,
                                     0xa9, 0x04, 0x24, 0x02, 0xd0, 0x26, 0xa9, 0x01, 0x85, 0x02, 0x60, 0xa9, 0x08, 0x24, 0x02, 0xd0,
                                     0x1b, 0xa9, 0x02, 0x85, 0x02, 0x60, 0xa9, 0x01, 0x24, 0x02, 0xd0, 0x10, 0xa9, 0x04, 0x85, 0x02,
                                     0x60, 0xa9, 0x02, 0x24, 0x02, 0xd0, 0x05, 0xa9, 0x08, 0x85, 0x02, 0x60, 0x60, 0x20, 0x94, 0x06,
                                     0x20, 0xa8, 0x06, 0x60, 0xa5, 0x00, 0xc5, 0x10, 0xd0, 0x0d, 0xa5, 0x01, 0xc5, 0x11, 0xd0, 0x07,
                                     0xe6, 0x03, 0xe6, 0x03, 0x20, 0x2a, 0x06, 0x60, 0xa2, 0x02, 0xb5, 0x10, 0xc5, 0x10, 0xd0, 0x06,
                                     0xb5, 0x11, 0xc5, 0x11, 0xf0, 0x09, 0xe8, 0xe8, 0xe4, 0x03, 0xf0, 0x06, 0x4c, 0xaa, 0x06, 0x4c,
                                     0x35, 0x07, 0x60, 0xa6, 0x03, 0xca, 0x8a, 0xb5, 0x10, 0x95, 0x12, 0xca, 0x10, 0xf9, 0xa5, 0x02,
                                     0x4a, 0xb0, 0x09, 0x4a, 0xb0, 0x19, 0x4a, 0xb0, 0x1f, 0x4a, 0xb0, 0x2f, 0xa5, 0x10, 0x38, 0xe9,
                                     0x20, 0x85, 0x10, 0x90, 0x01, 0x60, 0xc6, 0x11, 0xa9, 0x01, 0xc5, 0x11, 0xf0, 0x28, 0x60, 0xe6,
                                     0x10, 0xa9, 0x1f, 0x24, 0x10, 0xf0, 0x1f, 0x60, 0xa5, 0x10, 0x18, 0x69, 0x20, 0x85, 0x10, 0xb0,
                                     0x01, 0x60, 0xe6, 0x11, 0xa9, 0x06, 0xc5, 0x11, 0xf0, 0x0c, 0x60, 0xc6, 0x10, 0xa5, 0x10, 0x29,
                                     0x1f, 0xc9, 0x1f, 0xf0, 0x01, 0x60, 0x4c, 0x35, 0x07, 0xa0, 0x00, 0xa5, 0xfe, 0x91, 0x00, 0x60,
                                     0xa6, 0x03, 0xa9, 0x00, 0x81, 0x10, 0xa2, 0x00, 0xa9, 0x01, 0x81, 0x10, 0x60, 0xa2, 0x00, 0xea,
                                     0xea, 0xca, 0xd0, 0xfb, 0x60])

    cpu = mos6502.Processor(mem)
    cpu.reset()
    cpu.program_counter = 0x0600
    cpu.stack_pointer = 0xff

    done = False
    k = 0
    while k < 91:
        cpu.exec(1)
        k += 1
        # Random number generator
        cpu.memory[0x00fe] = np.random.randint(255)

        # Draw screen
        surface = pygame.surfarray.make_surface(
            np.array(cpu.memory[0x0200:0x0600]).reshape(32, 32))
        screen.blit(surface, (0, 0))

        # Get player input
        key = pygame.key.get_pressed()
        if key[pygame.K_LEFT]:
            cpu.memory[0xff] = 0x08
        elif key[pygame.K_RIGHT]:
            cpu.memory[0xff] = 0x02
        elif key[pygame.K_UP]:
            cpu.memory[0xff] = 0x01
        elif key[pygame.K_DOWN]:
            cpu.memory[0xff] = 0x04

        # Update and wait for next clock cycle
        pygame.display.update()
        clock.tick(60)

        print(
            f"Register A: {hex(cpu.reg_a)}. Register X: {hex(cpu.reg_x)}. Steps: {k}. Program counter: {hex(cpu.program_counter)}. Stack pointer: {hex(cpu.stack_pointer)}")
        print("N V B D I Z C")
        print(int(cpu.flag_n), int(cpu.flag_v), int(cpu.flag_b), int(
            cpu.flag_d), int(cpu.flag_i), int(cpu.flag_z), int(cpu.flag_c))

        # print("Zero page:")
        # for j in range(16):
        #    addr = j*16
        #    print(f"{hex(addr)}:", [''.join('{:02X}').format(i)
        #          for i in cpu.memory[addr:addr+16]])
        # print("Stack:")
        # for j in range(16):
        #    addr = j*16+0x100
        #    print(f"{hex(addr)}:", [''.join('{:02X}').format(i)
        #          for i in cpu.memory[addr:addr+16]])

        # print("Video memory:")
        # for j in range(64):
        #    addr = j*16+0x0200
        #    print(f"{hex(addr)}:", [''.join('{:02X}').format(i)
        #          for i in cpu.memory[addr:addr+16]])
        # input()
